/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package HMS;
import java.util.Date;
import com.toedter.calendar.JCalendar;
import java.awt.Image;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.sql.*;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JSpinner;
import javax.swing.JTextField;
import javax.swing.SpinnerDateModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Mizanur Rahman
 */
public class Appointment extends javax.swing.JFrame {

    /**
     * Creates new form Appointment
     */
    public Appointment() {
        initComponents();
         dateSet();
        txtdid.setText(sb.autoid()+"");
        String m="SELECT *FROM `doctor_info`";
        tableShow(m);
         


        
    }

    
       Connection con=null;
Statement st=null;
PreparedStatement pst=null;
ResultSet rs=null;

    void Myconnect(){

        try {
            con=DriverManager.getConnection("jdbc:mysql://localhost:3306/hospital_management","root","");
           
        } catch (SQLException ex) {
            Logger.getLogger(MyConnection.class.getName()).log(Level.SEVERE, null, ex);
        }
}
     void Myconnection(){

        try {
            con=DriverManager.getConnection("jdbc:mysql://localhost:3306/hospital_management","root","");
           st=con.createStatement();
        } catch (SQLException ex) {
            Logger.getLogger(MyConnection.class.getName()).log(Level.SEVERE, null, ex);
        }
}
   
    void dataoperation(String m){
          try {
            Myconnect();
          
            int b=st.executeUpdate(m);
            if(b>0){
               JOptionPane.showMessageDialog(this, "Update Succesful!");
            }
            else{
                JOptionPane.showMessageDialog(this, "Cann't update!");
            }
        } catch (SQLException ex) {
            Logger.getLogger(Add_Dep.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        txtmobile = new javax.swing.JTextField();
        txtsname = new javax.swing.JTextField();
        txtsche = new javax.swing.JTextField();
        txtadd = new javax.swing.JTextField();
        txtfess = new javax.swing.JTextField();
        txtdid = new javax.swing.JTextField();
        txtsalary = new javax.swing.JTextField();
        txtname = new javax.swing.JTextField();
        txtemail = new javax.swing.JTextField();
        txtspe = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        txtdate = new com.toedter.calendar.JDateChooser();
        txtpic = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        ab1 = new javax.swing.JTextField();
        ab = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtfollow = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jDesktopPane1 = new javax.swing.JDesktopPane();
        jLabel3 = new javax.swing.JLabel();
        txtsearch = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jButton8 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        jMenuItem1.setText("Refresh");
        jMenuItem1.setDisplayedMnemonicIndex(0);
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jPopupMenu1.add(jMenuItem1);

        jMenuItem2.setText("Back");
        jMenuItem2.setDisplayedMnemonicIndex(1);
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jPopupMenu1.add(jMenuItem2);

        jMenuItem3.setText("Exit");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jPopupMenu1.add(jMenuItem3);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jTabbedPane1.setBackground(new java.awt.Color(0, 0, 51));
        jTabbedPane1.setForeground(new java.awt.Color(255, 255, 255));
        jTabbedPane1.setOpaque(true);

        jPanel1.setLayout(null);

        txtmobile.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jPanel1.add(txtmobile);
        txtmobile.setBounds(750, 260, 210, 40);

        txtsname.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jPanel1.add(txtsname);
        txtsname.setBounds(750, 210, 210, 40);

        txtsche.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jPanel1.add(txtsche);
        txtsche.setBounds(400, 460, 210, 40);

        txtadd.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jPanel1.add(txtadd);
        txtadd.setBounds(400, 360, 210, 40);

        txtfess.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jPanel1.add(txtfess);
        txtfess.setBounds(400, 410, 210, 40);

        txtdid.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtdid.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtdidMouseClicked(evt);
            }
        });
        jPanel1.add(txtdid);
        txtdid.setBounds(400, 140, 210, 40);

        txtsalary.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jPanel1.add(txtsalary);
        txtsalary.setBounds(400, 510, 210, 40);

        txtname.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jPanel1.add(txtname);
        txtname.setBounds(400, 210, 210, 40);

        txtemail.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jPanel1.add(txtemail);
        txtemail.setBounds(400, 260, 210, 40);

        txtspe.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select", "Anesthesiologists", "Allergists", "Cardiologist", "Colon and Rectal Surgeons", "Critical Care Medicine", "Dermatologists", "Endocrinologists", "Emergency Medicine", "Familly Physicians", "Gastroenterologists", "Geriatric Medicine", "Hematologists", "Hospice and Palliative Medicine", "Infectious Disease", "Internists", "Nephrologists", "Neurologists", "Obstericians", "Oncologists", "Ophthamologists", "Osteopaths", "Otolaryngologists", "Pathologists", "Pediatricians", "Plastric Surgeons", "Podiatrists", "Preventive Medicine", "Psychiatrists" }));
        jPanel1.add(txtspe);
        txtspe.setBounds(400, 310, 210, 40);

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(51, 0, 51));
        jLabel5.setText("Date:");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(280, 560, 70, 30);
        jPanel1.add(txtdate);
        txtdate.setBounds(400, 560, 210, 40);
        jPanel1.add(txtpic);
        txtpic.setBounds(1060, 220, 230, 220);

        jButton1.setBackground(new java.awt.Color(0, 0, 0));
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Add");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);
        jButton1.setBounds(850, 140, 90, 30);

        jButton2.setBackground(new java.awt.Color(0, 0, 0));
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Select picture");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2);
        jButton2.setBounds(1120, 470, 140, 30);

        jButton3.setBackground(new java.awt.Color(0, 0, 0));
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("Exit");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3);
        jButton3.setBounds(1280, 140, 70, 30);

        jButton4.setBackground(new java.awt.Color(0, 0, 0));
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("Delete");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton4);
        jButton4.setBounds(1070, 140, 100, 30);

        jButton5.setBackground(new java.awt.Color(0, 0, 0));
        jButton5.setForeground(new java.awt.Color(255, 255, 255));
        jButton5.setText("Update");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton5);
        jButton5.setBounds(960, 140, 90, 30);

        jButton6.setBackground(new java.awt.Color(0, 0, 0));
        jButton6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButton6.setForeground(new java.awt.Color(255, 255, 255));
        jButton6.setText("Search");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton6);
        jButton6.setBounds(640, 143, 80, 30);

        jButton7.setBackground(new java.awt.Color(0, 0, 0));
        jButton7.setForeground(new java.awt.Color(255, 255, 255));
        jButton7.setText("Clear");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton7);
        jButton7.setBounds(1190, 140, 80, 30);

        jLabel6.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(51, 0, 51));
        jLabel6.setText("Schedule Tme:");
        jPanel1.add(jLabel6);
        jLabel6.setBounds(620, 326, 130, 30);

        jLabel7.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("TO");
        jPanel1.add(jLabel7);
        jLabel7.setBounds(840, 320, 50, 40);
        jPanel1.add(ab1);
        ab1.setBounds(890, 320, 70, 40);

        ab.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                abKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                abKeyTyped(evt);
            }
        });
        jPanel1.add(ab);
        ab.setBounds(750, 320, 90, 40);

        jLabel8.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(51, 0, 51));
        jLabel8.setText("Following Patients Fess:");
        jPanel1.add(jLabel8);
        jLabel8.setBounds(620, 380, 190, 40);
        jPanel1.add(txtfollow);
        txtfollow.setBounds(810, 380, 160, 40);

        jLabel1.setBackground(new java.awt.Color(0, 0, 0));
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/HMS/picture/DepartmentPicture/Add_Doctor.jpg"))); // NOI18N
        jPanel1.add(jLabel1);
        jLabel1.setBounds(0, 0, 1355, 762);

        jTabbedPane1.addTab("ADD DOCTOR", jPanel1);

        jPanel2.setLayout(null);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Doctor ID", "Name", "Second Name", "E-mail", "Phone", "Specialist", "Address", "Fee", "Scheduel", "Salary", "Date", "Time Scheduel", "Follow Patients Fee"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTable1MouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jPanel2.add(jScrollPane1);
        jScrollPane1.setBounds(10, 220, 1340, 402);

        jDesktopPane1.setLayer(jLabel3, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDesktopPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
                .addContainerGap())
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDesktopPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 168, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel2.add(jDesktopPane1);
        jDesktopPane1.setBounds(1130, 0, 200, 190);

        txtsearch.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtsearch.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(255, 255, 255)));
        txtsearch.setOpaque(false);
        txtsearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtsearchKeyPressed(evt);
            }
        });
        jPanel2.add(txtsearch);
        txtsearch.setBounds(650, 130, 280, 40);

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/HMS/picture/icons8_search_30px_1.png"))); // NOI18N
        jPanel2.add(jLabel4);
        jLabel4.setBounds(620, 130, 30, 50);

        jButton8.setBackground(new java.awt.Color(0, 0, 0));
        jButton8.setForeground(new java.awt.Color(255, 255, 255));
        jButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/HMS/picture/DepartmentPicture/icons8_refresh_25px.png"))); // NOI18N
        jButton8.setText("Refresh");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton8);
        jButton8.setBounds(600, 630, 120, 30);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/HMS/picture/DepartmentPicture/view_doctor.jpg"))); // NOI18N
        jPanel2.add(jLabel2);
        jLabel2.setBounds(0, 0, 1355, 762);

        jTabbedPane1.addTab("VIEW DOCTORS", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1362, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 745, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        setSize(new java.awt.Dimension(1378, 784));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButton3ActionPerformed
String Filepath;
Patient_Details2 pd2=new Patient_Details2();
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
          JFileChooser jf=new JFileChooser();
        jf.showOpenDialog(null);
        File f=jf.getSelectedFile();
        Filepath=f.getAbsolutePath();
        pd2.setImagetoLabel(Filepath, txtpic);
    }//GEN-LAST:event_jButton2ActionPerformed
    void Cl_panel(){
        txtdid.setText(sb.autoid()+"");
        
    txtemail.setText("");
    txtfess.setText("");
 txtmobile.setText("");
    txtname.setText("");
   
     txtsalary.setText("");
 txtsche.setText("");
    txtsname.setText("");
   txtspe.setSelectedIndex(0);
   dateSet();
   txtmobile.setText("");
   txtfollow.setText("");
   ab.setText("");
   ab1.setText("");
   txtadd.setText("");
   txtpic.setIcon(null);
   Filepath=null;
    }
    void UpdateOperation(){
       if(Filepath==null){
           
       }
       else{
        try {
            mc.Myconnect();
            //Myconnect();
            String id=txtdid.getText().toString();
            String fname=txtname.getText();
            String sname=txtsname.getText().toString();
            String email=txtemail.getText().toString();
            String mobile=txtmobile.getText().toString();
            String spec=txtspe.getSelectedItem().toString();
            String address=txtadd.getText().toString();
            String fess=txtfess.getText().toString();
          //  String sche=txtsche.getText().toString(); 
          //  String salary=txtsalary.getText().toString();
           
            //InputStream is = new FileInputStream(Filepath);
            String m="UPDATE `doctor_info` SET `fname`=?,`sname`=?,`email`=?,`mobile`=?,`specialist`=?,`address`=?,`fess`=? WHERE `did`=?";
            
               //mc.pst=mc.con.prepareStatement(m);
           
           
                mc.pst.setString(8, id);
           
            mc.pst.setString(1, fname);
            mc.pst.setString(2, sname);
             mc.pst.setString(3, email);
              mc.pst.setString(4, mobile);
               mc.pst.setString(5, spec);
                mc.pst.setString(6, address);
                 mc.pst.setString(7, fess);
                  //mc.pst.setString(9, sche);
                  // mc.pst.setString(10,salary);
                   
                   //mc.pst.setBlob(11, is);
                   int a=mc.pst.executeUpdate(m);
          //int a=st.executeUpdate(m);
                   if(a>0){
                      
                       JOptionPane.showMessageDialog(this, "Update Succesfull!");
                        Cl_panel();
                   }
                   else{
                       JOptionPane.showMessageDialog(this, "not Update!");
                   }
                   
            
            
            
        } catch (SQLException ex) {
            Logger.getLogger(Appointment.class.getName()).log(Level.SEVERE, null, ex);
        } 
        
        
        }
        
    }
    Sub_doctor_Details sb=new Sub_doctor_Details();
     void dateSet(){
       JCalendar d=new JCalendar();
         SimpleDateFormat sd=new SimpleDateFormat("yyyy-MM-dd");
            String mm=sd.format(d.getDate());
        ((JTextField)txtdate.getDateEditor().getUiComponent()).setText(mm);
        
    }
     
     void add(){
String t=ab.getText().toString();
String l=ab1.getText().toString();
String follow=txtfollow.getText().toString();

         if(Filepath!=null){
          try {
            // TODO add your handling code here:
            mc.Myconnect();
            //Myconnect();
            String id=txtdid.getText().toString();
            String fname=txtname.getText();
            String sname=txtsname.getText().toString();
            String email=txtemail.getText().toString();
            String mobile=txtmobile.getText().toString();
            String spec=txtspe.getSelectedItem().toString();
            String address=txtadd.getText().toString();
            String fess=txtfess.getText().toString();
            String sche=txtsche.getText().toString(); 
            String salary=txtsalary.getText().toString();
            SimpleDateFormat sd=new SimpleDateFormat("yyyy-MM-dd");
            String mm=sd.format(txtdate.getDate());
             InputStream is = new FileInputStream(Filepath);
             
            
             //JOptionPane.showMessageDialog(this, time);
             //String m="INSERT INTO `doctor_info` VALUES ('"+id+"','"+fname+"','"+sname+"','"+email+"','"+mobile+"','"+spec+"','"+address+"','"+fess+"','"+sche+"','"+salary+"','"+mm+"','"+is+"')";
           String m="INSERT INTO `doctor_info` VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
            mc.pst=mc.con.prepareStatement(m);
            mc.pst.setString(1, id);
            mc.pst.setString(2, fname);
            mc.pst.setString(3, sname);
             mc.pst.setString(4, email);
              mc.pst.setString(5, mobile);
               mc.pst.setString(6, spec);
                mc.pst.setString(7, address);
                 mc.pst.setString(8, fess);
                  mc.pst.setString(9, sche);
                   mc.pst.setString(10,salary);
                   mc.pst.setString(11, mm);
                   mc.pst.setBlob(12, is);
                   mc.pst.setString(13, t);
                   mc.pst.setString(14, l);
                   mc.pst.setString(15, follow);
                   int a=mc.pst.executeUpdate();
          //int a=st.executeUpdate(m);
                   if(a>0){
                      
                       JOptionPane.showMessageDialog(this, "Added Succesfull!");
                        Cl_panel();
                   }
                   else{
                       JOptionPane.showMessageDialog(this, "not Added!");
                   }
                   
            
            
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Appointment.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Appointment.class.getName()).log(Level.SEVERE, null, ex);
        } 
          catch(NullPointerException nr){
              JOptionPane.showMessageDialog(this, "please!fill form!");
          }
         }
         else{
              try {
            // TODO add your handling code here:
            mc.Myconnect();
            //Myconnect();
            String id=txtdid.getText().toString();
            String fname=txtname.getText();
            String sname=txtsname.getText().toString();
            String email=txtemail.getText().toString();
            String mobile=txtmobile.getText().toString();
            String spec=txtspe.getSelectedItem().toString();
            String address=txtadd.getText().toString();
            String fess=txtfess.getText().toString();
            String sche=txtsche.getText().toString(); 
            String salary=txtsalary.getText().toString();
            SimpleDateFormat sd=new SimpleDateFormat("yyyy-MM-dd");
            String mm=sd.format(txtdate.getDate());
            
          
            // JOptionPane.showMessageDialog(this, time);
             //InputStream is = new FileInputStream(Filepath);
             //String m="INSERT INTO `doctor_info` VALUES ('"+id+"','"+fname+"','"+sname+"','"+email+"','"+mobile+"','"+spec+"','"+address+"','"+fess+"','"+sche+"','"+salary+"','"+mm+"','"+is+"')";
           String m="INSERT INTO `doctor_info`(`did`,`fname`,`sname`,`email`,`mobile`,`specialist`,`address`,`fess`,`schedule`,`salary`,`date`,`start`,`end`,`folow_fees`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
            mc.pst=mc.con.prepareStatement(m);
            mc.pst.setString(1, id);
            mc.pst.setString(2, fname);
            mc.pst.setString(3, sname);
             mc.pst.setString(4, email);
              mc.pst.setString(5, mobile);
               mc.pst.setString(6, spec);
                mc.pst.setString(7, address);
                 mc.pst.setString(8, fess);
                  mc.pst.setString(9, sche);
                   mc.pst.setString(10,salary);
                   mc.pst.setString(11, mm);
                   mc.pst.setString(12, t);
                   mc.pst.setString(13, l);
                   mc.pst.setString(14, follow);
                   int a=mc.pst.executeUpdate();
          //int a=st.executeUpdate(m);
                   if(a>0){
                      
                       JOptionPane.showMessageDialog(this, "Added Succesfull!");
                        Cl_panel();
                   }
                   else{
                       JOptionPane.showMessageDialog(this, "not Added!");
                   }
                   
            
            
        } catch (SQLException ex) {
            Logger.getLogger(Appointment.class.getName()).log(Level.SEVERE, null, ex);
        } 
          catch(NullPointerException nr){
              JOptionPane.showMessageDialog(this, "please!fill form!");
          }
         }
     }
     MyConnection mc=new MyConnection();
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
      add();
       
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
       String t=ab.getText().toString();
String l=ab1.getText().toString();
String follow=txtfollow.getText().toString();
        
        
        if(Filepath==null){
             try{
            // TODO add your handling code here:
            //UpdateOperation();
            //Cl_panel()
            Myconnect();
            String id=txtdid.getText().toString();
            String fname=txtname.getText();
            String sname=txtsname.getText().toString();
            String email=txtemail.getText().toString();
            String mobile=txtmobile.getText().toString();
            String spec=txtspe.getSelectedItem().toString();
            String address=txtadd.getText().toString();
            String fess=txtfess.getText().toString();
            String sche=txtsche.getText().toString(); 
            String salary=txtsalary.getText().toString();
            
            //InputStream is = new FileInputStream(Filepath);
            String m="UPDATE `doctor_info` SET `fname`='"+fname+"',`sname`='"+sname+"',`email`='"+email+"',`mobile`='"+mobile+"',`specialist`='"+spec+"',`address`='"+address+"',`fess`='"+fess+"',`schedule`='"+sche+"',`salary`='"+salary+"',`start`='"+t+"',`end`='"+l+"',`folow_fees`='"+follow+"' WHERE `did`='"+id+"'";
           pst=con.prepareStatement(m);
          
           int a=pst.executeUpdate();
           if(a>0){
              JOptionPane.showMessageDialog(this, "Update successfull!");
              Cl_panel();
           }
           else{
               JOptionPane.showMessageDialog(this, "Not Update!");
           }
           
           
        } catch (SQLException ex) {
            Logger.getLogger(Appointment.class.getName()).log(Level.SEVERE, null, ex);
        } 
        catch(NullPointerException nr){
            JOptionPane.showMessageDialog(this, "Please!Fill this form!");
        }
        }
        else{
        try{
            // TODO add your handling code here:
            //UpdateOperation();
            //Cl_panel()
            Myconnect();
            String id=txtdid.getText().toString();
            String fname=txtname.getText();
            String sname=txtsname.getText().toString();
            String email=txtemail.getText().toString();
            String mobile=txtmobile.getText().toString();
            String spec=txtspe.getSelectedItem().toString();
            String address=txtadd.getText().toString();
            String fess=txtfess.getText().toString();
            String sche=txtsche.getText().toString(); 
            String salary=txtsalary.getText().toString();
            
            InputStream is = new FileInputStream(Filepath);
            String m="UPDATE `doctor_info` SET `fname`='"+fname+"',`sname`='"+sname+"',`email`='"+email+"',`mobile`='"+mobile+"',`specialist`='"+spec+"',`address`='"+address+"',`fess`='"+fess+"',`schedule`='"+sche+"',`salary`='"+salary+"',`picture`=?,,`start`='"+t+"',`end`='"+l+"',`folow_fees`='"+follow+"' WHERE `did`='"+id+"'";
           pst=con.prepareStatement(m);
           pst.setBlob(1, is);
           int a=pst.executeUpdate();
           if(a>0){
              JOptionPane.showMessageDialog(this, "Update successfull!");
              Cl_panel();
           }
           else{
               JOptionPane.showMessageDialog(this, "Not Update!");
           }
           
           
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Appointment.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Appointment.class.getName()).log(Level.SEVERE, null, ex);
        } 
        catch(NullPointerException nr){
            JOptionPane.showMessageDialog(this, "Please!Fill this form!");
        }
            
        }

    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        try {
            // TODO add your handling code here:
            mc.Myconnect();
            String id=txtdid.getText().toString();
            String m="DELETE FROM`doctor_info` WHERE `did`=?";
            mc.pst=mc.con.prepareStatement(m);
            mc.pst.setString(1, id);
             int a=mc.pst.executeUpdate();
          //int a=st.executeUpdate(m);
                   if(a>0){
                      
                       JOptionPane.showMessageDialog(this, "Delete Succesfull!");
                        Cl_panel();
                   }
                   else{
                       JOptionPane.showMessageDialog(this, "not Delete!");
                   }
        } catch (SQLException ex) {
            Logger.getLogger(Appointment.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_jButton4ActionPerformed

    void SelectedTablevaluesetTable(String x){
        int p=0;
       int a=txtspe.getItemCount();
        for (int i = 0; i !=a; i++) {
            String m=txtspe.getItemAt(i).toString();
            if(m.contains(x))
            {
               p=i; 
                
            }
            
        }
        txtspe.setSelectedIndex(p);
       
        
        
    }
    
    void Show(){
        try {
            mc.Myconnect();
            String id=txtdid.getText().toString();
            String m="SELECT * FROM `doctor_info` WHERE `did`=?";
            mc.pst=mc.con.prepareStatement(m);
            mc.pst.setString(1, id);
            mc.rs=mc.pst.executeQuery();
            if(mc.rs.next()){
                txtname.setText(mc.rs.getString(2));
               txtsname.setText(mc.rs.getString(3));
               txtemail.setText(mc.rs.getString(4));
               txtmobile.setText(mc.rs.getString(5));
               SelectedTablevaluesetTable(mc.rs.getString(6));
               txtadd.setText(mc.rs.getString(7));
               txtfess.setText(mc.rs.getString(8));
               txtsche.setText(mc.rs.getString(9));
               txtsalary.setText(mc.rs.getString(10));
               SimpleDateFormat sd=new SimpleDateFormat("yyyy-MM-dd");
           String mm=sd.format(mc.rs.getDate(11));
        ((JTextField)txtdate.getDateEditor().getUiComponent()).setText(mm);
        byte getimg[]=mc.rs.getBytes(12);
        ImageIcon im=new ImageIcon(new ImageIcon(getimg).getImage().getScaledInstance(txtpic.getWidth(),txtpic.getHeight(), Image.SCALE_SMOOTH));
        txtpic.setIcon(im);
                ab.setText(mc.rs.getString(13));
                ab1.setText(mc.rs.getString(14));
                txtfollow.setText(mc.rs.getString(15));
            }
        } catch (SQLException ex) {
            Logger.getLogger(Appointment.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    void tableShow(String m){
        try {
            Myconnect();
            DefaultTableModel dt=(DefaultTableModel)jTable1.getModel();
            dt.setRowCount(0);
            pst=con.prepareStatement(m);
            rs=pst.executeQuery();
            while(rs.next()){
                
                dt.addRow(new Object[]{rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8),rs.getString(9),rs.getShort(10),rs.getString(11),rs.getString(13)+"-"+rs.getString(14)+" pm",rs.getString(15)});
                
            }
        } catch (SQLException ex) {
            Logger.getLogger(Appointment.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        Show();
    }//GEN-LAST:event_jButton6ActionPerformed

    private void txtdidMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtdidMouseClicked
        // TODO add your handling code here:
        txtdid.setText("");
    }//GEN-LAST:event_txtdidMouseClicked

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        Cl_panel();
        //JOptionPane.showMessageDialog(this,mmn);
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        try {
            // TODO add your handling code here:
            mc.Myconnect();
            DefaultTableModel dt=(DefaultTableModel)jTable1.getModel();
            String a=(dt.getValueAt(jTable1.getSelectedRow(),0).toString());
            String m="SELECT `picture` FROM `doctor_info` WHERE `did`=?";
            
            mc.pst=mc.con.prepareStatement(m);
            mc.pst.setString(1, a);
            mc.rs=mc.pst.executeQuery();
            if(mc.rs.next()){
                
                byte getimg[]=mc.rs.getBytes(1);
                ImageIcon im=new ImageIcon(new ImageIcon(getimg).getImage().getScaledInstance(txtpic.getWidth(),txtpic.getHeight(), Image.SCALE_SMOOTH));
              jLabel3.setIcon(im);
                
            }
        } catch (SQLException ex) {
            Logger.getLogger(Appointment.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        catch(NullPointerException ex){
            System.out.println(ex);
        }
       
        
    }//GEN-LAST:event_jTable1MouseClicked

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
         String m="SELECT *FROM `doctor_info`";
        tableShow(m);
        
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jTable1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseReleased
        // TODO add your handling code here:
        if(evt.isPopupTrigger()){
            jPopupMenu1.show(this, evt.getX(),evt.getY());
        }
    }//GEN-LAST:event_jTable1MouseReleased

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
          String m="SELECT *FROM `doctor_info`";
        tableShow(m);
        
    }//GEN-LAST:event_jButton8ActionPerformed

    private void txtsearchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtsearchKeyPressed
        // TODO add your handling code here:
        try{
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
                Myconnection();
            DefaultTableModel dt=(DefaultTableModel)jTable1.getModel();
            dt.setRowCount(0);
            String n=txtsearch.getText().toString();
           String m="SELECT `did`,`fname`,`sname`,`email`,`mobile`,`specialist`,`address`,`fess`,`schedule`,`salary`,`date`,`picture` FROM `doctor_info` WHERE `did`='"+n+"'";
        
            
          rs=st.executeQuery(m);
           if(rs.next()){
                
                dt.addRow(new Object[]{rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8),rs.getString(9),rs.getString(10),rs.getString(11)});
                
            }
            byte getimg[]=rs.getBytes(12);
                ImageIcon im=new ImageIcon(new ImageIcon(getimg).getImage().getScaledInstance(txtpic.getWidth(),txtpic.getHeight(), Image.SCALE_SMOOTH));
              jLabel3.setIcon(im);
           
        }
        } catch (SQLException ex) {
            Logger.getLogger(Appointment.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_txtsearchKeyPressed

    private void abKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_abKeyReleased
        // TODO add your handling code here:
        
        
        
    }//GEN-LAST:event_abKeyReleased

    private void abKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_abKeyTyped
        // TODO add your handling code here:
        
        
      /*  char a=evt.getKeyChar();
        if(Character.isDigit(a) && KeyEvent.VK_N==a){
             
        }
        else{
           evt.consume();
        }*/
    }//GEN-LAST:event_abKeyTyped
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Appointment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Appointment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Appointment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Appointment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Appointment().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField ab;
    private javax.swing.JTextField ab1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtadd;
    private com.toedter.calendar.JDateChooser txtdate;
    private javax.swing.JTextField txtdid;
    private javax.swing.JTextField txtemail;
    private javax.swing.JTextField txtfess;
    private javax.swing.JTextField txtfollow;
    private javax.swing.JTextField txtmobile;
    private javax.swing.JTextField txtname;
    private javax.swing.JLabel txtpic;
    private javax.swing.JTextField txtsalary;
    private javax.swing.JTextField txtsche;
    private javax.swing.JTextField txtsearch;
    private javax.swing.JTextField txtsname;
    private javax.swing.JComboBox txtspe;
    // End of variables declaration//GEN-END:variables
}
